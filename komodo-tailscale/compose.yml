################################
# ðŸ¦Ž KOMODO COMPOSE - MONGO ðŸ¦Ž #
################################

## This compose file will deploy:
##   1. MongoDB
##   2. Komodo Core
##   3. Komodo Periphery

services:
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    environment:
      CONTAINERS: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik_proxy

  traefik:
    image: traefik:v3.0
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command:
      - "--configFile=/etc/traefik/config/static.yml"
    volumes:
      - ./config:/etc/traefik/config:ro
    ports:
    # Do tailscale serve --bg https+insecure://127.0.0.1:443
      - "80:80"
      - "127.0.0.1:443:443"
    networks:
      - traefik_proxy

  mongo:
    image: mongo
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    command: --quiet --wiredTigerCacheSizeGB 0.25
    restart: unless-stopped
    # ports:
    #   - 27017:27017
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${KOMODO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${KOMODO_DB_PASSWORD}
    networks:
      - traefik_proxy
  
  core:
    image: ghcr.io/moghtech/komodo-core:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    labels:
      # Enable Traefik for this container
      - traefik.enable=true

      # Define the router entrypoint and rule
      - traefik.http.routers.komodo-core.rule=Host(`${FQDN}`)

      # If you're using TLS (optional)
      - traefik.http.routers.komodo-core.entrypoints=websecure
      - traefik.http.routers.komodo-core.tls=true

      # Define the service port inside the container
      - komodo.skip=true
      # komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    networks:
      - traefik_proxy
    depends_on:
      - mongo
    # ports:
    #   - 9120:9120
    env_file: ./.env
    environment:
      KOMODO_DATABASE_ADDRESS: mongo:27017
      KOMODO_DATABASE_USERNAME: ${KOMODO_DB_USERNAME}
      KOMODO_DATABASE_PASSWORD: ${KOMODO_DB_PASSWORD}
    volumes:
      ## Store dated backups of the database - https://komo.do/docs/setup/backup
      - ${COMPOSE_KOMODO_BACKUPS_PATH}:/backups
      ## Store sync files on server
      # - /path/to/syncs:/syncs
      ## Optionally mount a custom core.config.toml
      # - /path/to/core.config.toml:/config/config.toml
    ## Allows for systemd Periphery connection at 
    ## "https://host.docker.internal:8120"
    # extra_hosts:
    #   - host.docker.internal:host-gateway

  ## Deploy Periphery container using this block,
  ## or deploy the Periphery binary with systemd using 
  ## https://github.com/moghtech/komodo/tree/main/scripts
  periphery:
    image: ghcr.io/moghtech/komodo-periphery:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    env_file: ./.env
    networks:
      - traefik_proxy
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      ## Allow Periphery to see processes outside of container
      - /proc:/proc
      ## Specify the Periphery agent root directory.
      ## Must be the same inside and outside the container,
      ## or docker will get confused. See https://github.com/moghtech/komodo/discussions/180.
      ## Default: /etc/komodo.
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}

volumes:
  # Mongo
  mongo-data:
  mongo-config:

networks:
  traefik_proxy:
    external: true