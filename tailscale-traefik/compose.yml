services:
  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    hostname: ${SERVICE}
    environment:
      TS_AUTHKEY: ${TS_AUTHKEY}
      TS_STATE_DIR: /var/lib/tailscale
      TS_USERSPACE: false
      TS_SERVE_CONFIG: /config/serve.json
      TS_ENABLE_HEALTH_CHECK: true              # Enable healthcheck endpoint: "/healthz"
      TS_LOCAL_ADDR_PORT: 127.0.0.1:41234       # The <addr>:<port> for the healthz endpoint
      TS_ACCEPT_DNS: true # Uncomment when using MagicDNS
    volumes:
      - ${PWD}/tailscale/config:/config
      - ${PWD}/tailscale/state:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: unless-stopped

  traefik_proxy:
    image: traefik:v3.0
    network_mode: service:tailscale # Sidecar configuration to route ${SERVICE} through Tailscale
    container_name: app-${SERVICE} # Name for local container management
    depends_on:
      tailscale:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pgrep", "-f", "${SERVICE}"] # Check if ${SERVICE} process is running
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 30s # Time to wait before starting health checks
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock #Required for the Service Connections
      - ${PWD}/traefik/config:/etc/traefik/config:ro # traefik folder
    command:
      - "--configFile=/etc/traefik/config/static.yml"
    ports:
      - "127.0.0.1:80:80"
      - "127.0.0.1:443:443"

  stirling:
    image: docker.stirlingpdf.com/stirlingtools/stirling-pdf:latest
    labels:
      - traefik.enable=true # To 
      - traefik.http.routers.simpleweb.rule=Host(`stirling.domain.local`)
      - traefik.http.routers.simpleweb.entrypoints=web